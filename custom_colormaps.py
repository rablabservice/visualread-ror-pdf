import numpy as np
import seaborn as sns
import matplotlib as mpl


def create_cmap(color_list, n_colors=None):
    """Create a colormap from a list of colors.

    Parameters
    ----------
    color_list : list
        List of colors in the colormap. Should be a 4-column matrix with
        [:, 0] being the position of each color in the range [0, 1] and
        [:, 1:] being the RGB color values in the range [0, 255]. The
        first color in the list should have position = 0, and the
        last color in the list should have position = 1. Intermediate
        colors should have positions between 0 and 1, listed in
        ascending order. Colors are interpolated between adjacent colors
        in the list. Function has some flexibility to handle color lists
        with only 3 columns (i.e. no color position column), given with
        positions out of order, or with position values or RGB values
        outside the ranges listed, but read the code to understand
        handling before deviating from the recommended formatting.
    n_colors : int
        Number of colors to be included in the final colormap. Must be
        >= the number of colors in color_list. If None, the number of
        colors in color_list is used.

    Returns
    -------
    cmap : matplotlib.colors.ListedColormap
        The final colormap.
    """
    # Ensure color_list is a numpy array.
    color_list = np.asanyarray(color_list)

    # Get n_colors.
    if n_colors is None:
        n_colors = color_list.shape[0]

    # Add a color position column if one is missing.
    if color_list.shape[1] == 3:
        color_list = np.hstack((np.arange(color_list.shape[0])[:, None], color_list))

    # Sort colors in ascending order by position.
    color_list = color_list[np.argsort(color_list[:, 0]), :]

    # Normalize the positions of the colors to the range [0, 1].
    if np.any(color_list[:, 0] > 1) or np.any(color_list[:, 0] < 0):
        _min = np.min(color_list[:, 0])
        _max = np.max(color_list[:, 0])
        color_list[:, 0] = (color_list[:, 0] - _min) / (_max - _min)

    # Normalize the RGB values to the range [0, 1].
    if np.any(color_list[:, 1:] > 1):
        color_list[:, 1:] = color_list[:, 1:] / 255

    # Interpolate between adjacent colors.
    ii = 0
    cmap = []
    for ii in range(color_list.shape[0] - 1):
        cmap += list(
            sns.blend_palette(
                colors=[color_list[ii, 1:], color_list[ii + 1, 1:]],
                n_colors=np.rint(np.diff(color_list[ii : ii + 2, 0])[0] * n_colors),
            )
        )

    # Convert the colormap list to a ListedColormap.
    cmap = mpl.colors.ListedColormap(cmap)

    return cmap


def nih_cmap():
    """Return the NIH colormap as a matplotlib ListedColormap."""
    n_colors = 256
    color_list = np.array(
        [
            [0, 0, 0, 0],
            [0.059, 85, 0, 170],
            [0.122, 0, 0, 85],
            [0.247, 0, 0, 255],
            [0.309, 0, 85, 255],
            [0.372, 0, 170, 170],
            [0.434, 0, 255, 170],
            [0.497, 0, 255, 0],
            [0.559, 85, 255, 85],
            [0.625, 255, 255, 0],
            [0.75, 255, 85, 0],
            [0.85, 255, 0, 0],
            [0.99608, 172, 0, 0],
            [1, 140, 0, 0],
        ]
    )
    cmap = create_cmap(color_list, n_colors)
    return cmap


def avid_cmap():
    """Return the Avid colormap as a matplotlib ListedColormap."""
    n_colors = 255
    color_list = np.array(
        [
            [0, 0, 0, 0],
            [1, 0, 0, 0],
            [2, 0, 2, 3],
            [3, 0, 5, 7],
            [4, 1, 7, 10],
            [5, 1, 9, 14],
            [6, 1, 12, 17],
            [7, 1, 14, 20],
            [8, 2, 16, 24],
            [9, 2, 19, 27],
            [10, 2, 21, 30],
            [11, 2, 23, 34],
            [12, 2, 25, 37],
            [13, 3, 28, 41],
            [14, 3, 30, 44],
            [15, 3, 32, 47],
            [16, 3, 35, 51],
            [17, 4, 37, 54],
            [18, 4, 39, 57],
            [19, 4, 42, 61],
            [20, 4, 44, 64],
            [21, 4, 46, 68],
            [22, 5, 49, 71],
            [23, 5, 51, 74],
            [24, 5, 53, 78],
            [25, 5, 56, 81],
            [26, 5, 58, 84],
            [27, 6, 60, 88],
            [28, 6, 62, 91],
            [29, 6, 65, 95],
            [30, 6, 67, 98],
            [31, 7, 69, 101],
            [32, 7, 72, 105],
            [33, 7, 74, 108],
            [34, 7, 77, 108],
            [35, 7, 79, 107],
            [36, 7, 82, 107],
            [37, 7, 85, 107],
            [38, 7, 87, 107],
            [39, 8, 90, 106],
            [40, 8, 93, 106],
            [41, 8, 95, 106],
            [42, 8, 98, 106],
            [43, 8, 101, 105],
            [44, 8, 103, 105],
            [45, 8, 106, 105],
            [46, 8, 109, 105],
            [47, 8, 111, 104],
            [48, 8, 114, 104],
            [49, 9, 117, 104],
            [50, 9, 120, 104],
            [51, 9, 122, 103],
            [52, 9, 125, 103],
            [53, 9, 128, 103],
            [54, 9, 130, 103],
            [55, 9, 133, 102],
            [56, 9, 136, 102],
            [57, 9, 138, 102],
            [58, 9, 141, 102],
            [59, 10, 144, 101],
            [60, 10, 146, 101],
            [61, 10, 149, 101],
            [62, 10, 152, 101],
            [63, 10, 154, 100],
            [64, 10, 157, 100],
            [65, 10, 157, 99],
            [66, 11, 157, 98],
            [67, 11, 156, 97],
            [68, 11, 156, 96],
            [69, 12, 156, 95],
            [70, 12, 156, 95],
            [71, 12, 156, 94],
            [72, 13, 156, 93],
            [73, 13, 155, 92],
            [74, 13, 155, 91],
            [75, 14, 155, 90],
            [76, 14, 155, 89],
            [77, 14, 155, 88],
            [78, 15, 154, 87],
            [79, 15, 154, 86],
            [80, 15, 154, 85],
            [81, 16, 154, 85],
            [82, 16, 154, 84],
            [83, 16, 154, 83],
            [84, 17, 153, 82],
            [85, 17, 153, 81],
            [86, 17, 153, 80],
            [87, 18, 153, 79],
            [88, 18, 153, 78],
            [89, 18, 152, 77],
            [90, 19, 152, 76],
            [91, 19, 152, 75],
            [92, 19, 152, 75],
            [93, 20, 152, 74],
            [94, 20, 152, 73],
            [95, 20, 151, 72],
            [96, 21, 151, 71],
            [97, 21, 151, 70],
            [98, 26, 147, 69],
            [99, 31, 144, 68],
            [100, 36, 140, 67],
            [101, 41, 137, 66],
            [102, 46, 133, 65],
            [103, 52, 129, 64],
            [104, 57, 126, 63],
            [105, 62, 122, 62],
            [106, 67, 118, 60],
            [107, 72, 115, 59],
            [108, 77, 111, 58],
            [109, 82, 108, 57],
            [110, 87, 104, 56],
            [111, 92, 100, 55],
            [112, 97, 97, 54],
            [113, 103, 93, 53],
            [114, 108, 89, 52],
            [115, 113, 86, 51],
            [116, 118, 82, 50],
            [117, 123, 79, 49],
            [118, 128, 75, 48],
            [119, 133, 71, 47],
            [120, 138, 68, 46],
            [121, 143, 64, 45],
            [122, 148, 60, 43],
            [123, 153, 57, 42],
            [124, 159, 53, 41],
            [125, 164, 50, 40],
            [126, 169, 46, 39],
            [127, 174, 42, 38],
            [128, 179, 39, 37],
            [129, 184, 35, 36],
            [130, 185, 36, 36],
            [131, 186, 37, 36],
            [132, 187, 38, 36],
            [133, 188, 39, 36],
            [134, 189, 40, 36],
            [135, 189, 41, 36],
            [136, 190, 42, 36],
            [137, 191, 43, 36],
            [138, 192, 43, 37],
            [139, 193, 44, 37],
            [140, 194, 45, 37],
            [141, 195, 46, 37],
            [142, 196, 47, 37],
            [143, 197, 48, 37],
            [144, 198, 49, 37],
            [145, 199, 50, 37],
            [146, 199, 51, 37],
            [147, 200, 52, 37],
            [148, 201, 53, 37],
            [149, 202, 54, 37],
            [150, 203, 55, 37],
            [151, 204, 56, 37],
            [152, 205, 57, 37],
            [153, 206, 58, 37],
            [154, 207, 58, 38],
            [155, 208, 59, 38],
            [156, 209, 60, 38],
            [157, 209, 61, 38],
            [158, 210, 62, 38],
            [159, 211, 63, 38],
            [160, 212, 64, 38],
            [161, 213, 65, 38],
            [162, 214, 66, 38],
            [163, 215, 68, 38],
            [164, 215, 71, 38],
            [165, 216, 73, 38],
            [166, 216, 75, 38],
            [167, 217, 77, 38],
            [168, 217, 80, 37],
            [169, 218, 82, 37],
            [170, 218, 84, 37],
            [171, 219, 86, 37],
            [172, 219, 89, 37],
            [173, 220, 91, 37],
            [174, 220, 93, 37],
            [175, 221, 95, 37],
            [176, 221, 98, 37],
            [177, 222, 100, 37],
            [178, 222, 102, 36],
            [179, 223, 104, 36],
            [180, 223, 107, 36],
            [181, 224, 109, 36],
            [182, 224, 111, 36],
            [183, 225, 113, 36],
            [184, 225, 116, 36],
            [185, 226, 118, 36],
            [186, 226, 120, 36],
            [187, 227, 122, 36],
            [188, 227, 125, 35],
            [189, 228, 127, 35],
            [190, 228, 129, 35],
            [191, 229, 131, 35],
            [192, 229, 134, 35],
            [193, 230, 136, 35],
            [194, 230, 138, 34],
            [195, 231, 140, 34],
            [196, 231, 142, 33],
            [197, 231, 144, 33],
            [198, 232, 146, 32],
            [199, 232, 148, 32],
            [200, 233, 150, 31],
            [201, 233, 152, 30],
            [202, 233, 154, 30],
            [203, 234, 156, 29],
            [204, 234, 158, 29],
            [205, 234, 160, 28],
            [206, 235, 162, 28],
            [207, 235, 164, 27],
            [208, 235, 166, 26],
            [209, 236, 168, 26],
            [210, 236, 169, 25],
            [211, 237, 171, 25],
            [212, 237, 173, 24],
            [213, 237, 175, 23],
            [214, 238, 177, 23],
            [215, 238, 179, 22],
            [216, 238, 181, 22],
            [217, 239, 183, 21],
            [218, 239, 185, 21],
            [219, 239, 187, 20],
            [220, 240, 189, 19],
            [221, 240, 191, 19],
            [222, 241, 193, 18],
            [223, 241, 195, 18],
            [224, 241, 197, 17],
            [225, 242, 199, 17],
            [226, 242, 201, 16],
            [227, 242, 202, 16],
            [228, 242, 203, 16],
            [229, 242, 204, 17],
            [230, 242, 205, 17],
            [231, 241, 207, 17],
            [232, 241, 208, 17],
            [233, 241, 209, 18],
            [234, 241, 210, 18],
            [235, 241, 211, 18],
            [236, 241, 212, 18],
            [237, 241, 213, 19],
            [238, 241, 214, 19],
            [239, 241, 215, 19],
            [240, 241, 216, 19],
            [241, 240, 218, 20],
            [242, 240, 219, 20],
            [243, 240, 220, 20],
            [244, 240, 221, 20],
            [245, 240, 222, 21],
            [246, 240, 223, 21],
            [247, 240, 224, 21],
            [248, 240, 225, 21],
            [249, 240, 226, 22],
            [250, 240, 227, 22],
            [251, 239, 229, 22],
            [252, 239, 230, 22],
            [253, 239, 231, 23],
            [254, 239, 232, 23],
            [255, 239, 233, 23],
        ]
    )
    cmap = create_cmap(color_list, n_colors)
    return cmap


def turbo_cmap():
    color_list = np.array(
        [
            [0.18995, 0.07176, 0.23217],
            [0.19483, 0.08339, 0.26149],
            [0.19956, 0.09498, 0.29024],
            [0.20415, 0.10652, 0.31844],
            [0.20860, 0.11802, 0.34607],
            [0.21291, 0.12947, 0.37314],
            [0.21708, 0.14087, 0.39964],
            [0.22111, 0.15223, 0.42558],
            [0.22500, 0.16354, 0.45096],
            [0.22875, 0.17481, 0.47578],
            [0.23236, 0.18603, 0.50004],
            [0.23582, 0.19720, 0.52373],
            [0.23915, 0.20833, 0.54686],
            [0.24234, 0.21941, 0.56942],
            [0.24539, 0.23044, 0.59142],
            [0.24830, 0.24143, 0.61286],
            [0.25107, 0.25237, 0.63374],
            [0.25369, 0.26327, 0.65406],
            [0.25618, 0.27412, 0.67381],
            [0.25853, 0.28492, 0.69300],
            [0.26074, 0.29568, 0.71162],
            [0.26280, 0.30639, 0.72968],
            [0.26473, 0.31706, 0.74718],
            [0.26652, 0.32768, 0.76412],
            [0.26816, 0.33825, 0.78050],
            [0.26967, 0.34878, 0.79631],
            [0.27103, 0.35926, 0.81156],
            [0.27226, 0.36970, 0.82624],
            [0.27334, 0.38008, 0.84037],
            [0.27429, 0.39043, 0.85393],
            [0.27509, 0.40072, 0.86692],
            [0.27576, 0.41097, 0.87936],
            [0.27628, 0.42118, 0.89123],
            [0.27667, 0.43134, 0.90254],
            [0.27691, 0.44145, 0.91328],
            [0.27701, 0.45152, 0.92347],
            [0.27698, 0.46153, 0.93309],
            [0.27680, 0.47151, 0.94214],
            [0.27648, 0.48144, 0.95064],
            [0.27603, 0.49132, 0.95857],
            [0.27543, 0.50115, 0.96594],
            [0.27469, 0.51094, 0.97275],
            [0.27381, 0.52069, 0.97899],
            [0.27273, 0.53040, 0.98461],
            [0.27106, 0.54015, 0.98930],
            [0.26878, 0.54995, 0.99303],
            [0.26592, 0.55979, 0.99583],
            [0.26252, 0.56967, 0.99773],
            [0.25862, 0.57958, 0.99876],
            [0.25425, 0.58950, 0.99896],
            [0.24946, 0.59943, 0.99835],
            [0.24427, 0.60937, 0.99697],
            [0.23874, 0.61931, 0.99485],
            [0.23288, 0.62923, 0.99202],
            [0.22676, 0.63913, 0.98851],
            [0.22039, 0.64901, 0.98436],
            [0.21382, 0.65886, 0.97959],
            [0.20708, 0.66866, 0.97423],
            [0.20021, 0.67842, 0.96833],
            [0.19326, 0.68812, 0.96190],
            [0.18625, 0.69775, 0.95498],
            [0.17923, 0.70732, 0.94761],
            [0.17223, 0.71680, 0.93981],
            [0.16529, 0.72620, 0.93161],
            [0.15844, 0.73551, 0.92305],
            [0.15173, 0.74472, 0.91416],
            [0.14519, 0.75381, 0.90496],
            [0.13886, 0.76279, 0.89550],
            [0.13278, 0.77165, 0.88580],
            [0.12698, 0.78037, 0.87590],
            [0.12151, 0.78896, 0.86581],
            [0.11639, 0.79740, 0.85559],
            [0.11167, 0.80569, 0.84525],
            [0.10738, 0.81381, 0.83484],
            [0.10357, 0.82177, 0.82437],
            [0.10026, 0.82955, 0.81389],
            [0.09750, 0.83714, 0.80342],
            [0.09532, 0.84455, 0.79299],
            [0.09377, 0.85175, 0.78264],
            [0.09287, 0.85875, 0.77240],
            [0.09267, 0.86554, 0.76230],
            [0.09320, 0.87211, 0.75237],
            [0.09451, 0.87844, 0.74265],
            [0.09662, 0.88454, 0.73316],
            [0.09958, 0.89040, 0.72393],
            [0.10342, 0.89600, 0.71500],
            [0.10815, 0.90142, 0.70599],
            [0.11374, 0.90673, 0.69651],
            [0.12014, 0.91193, 0.68660],
            [0.12733, 0.91701, 0.67627],
            [0.13526, 0.92197, 0.66556],
            [0.14391, 0.92680, 0.65448],
            [0.15323, 0.93151, 0.64308],
            [0.16319, 0.93609, 0.63137],
            [0.17377, 0.94053, 0.61938],
            [0.18491, 0.94484, 0.60713],
            [0.19659, 0.94901, 0.59466],
            [0.20877, 0.95304, 0.58199],
            [0.22142, 0.95692, 0.56914],
            [0.23449, 0.96065, 0.55614],
            [0.24797, 0.96423, 0.54303],
            [0.26180, 0.96765, 0.52981],
            [0.27597, 0.97092, 0.51653],
            [0.29042, 0.97403, 0.50321],
            [0.30513, 0.97697, 0.48987],
            [0.32006, 0.97974, 0.47654],
            [0.33517, 0.98234, 0.46325],
            [0.35043, 0.98477, 0.45002],
            [0.36581, 0.98702, 0.43688],
            [0.38127, 0.98909, 0.42386],
            [0.39678, 0.99098, 0.41098],
            [0.41229, 0.99268, 0.39826],
            [0.42778, 0.99419, 0.38575],
            [0.44321, 0.99551, 0.37345],
            [0.45854, 0.99663, 0.36140],
            [0.47375, 0.99755, 0.34963],
            [0.48879, 0.99828, 0.33816],
            [0.50362, 0.99879, 0.32701],
            [0.51822, 0.99910, 0.31622],
            [0.53255, 0.99919, 0.30581],
            [0.54658, 0.99907, 0.29581],
            [0.56026, 0.99873, 0.28623],
            [0.57357, 0.99817, 0.27712],
            [0.58646, 0.99739, 0.26849],
            [0.59891, 0.99638, 0.26038],
            [0.61088, 0.99514, 0.25280],
            [0.62233, 0.99366, 0.24579],
            [0.63323, 0.99195, 0.23937],
            [0.64362, 0.98999, 0.23356],
            [0.65394, 0.98775, 0.22835],
            [0.66428, 0.98524, 0.22370],
            [0.67462, 0.98246, 0.21960],
            [0.68494, 0.97941, 0.21602],
            [0.69525, 0.97610, 0.21294],
            [0.70553, 0.97255, 0.21032],
            [0.71577, 0.96875, 0.20815],
            [0.72596, 0.96470, 0.20640],
            [0.73610, 0.96043, 0.20504],
            [0.74617, 0.95593, 0.20406],
            [0.75617, 0.95121, 0.20343],
            [0.76608, 0.94627, 0.20311],
            [0.77591, 0.94113, 0.20310],
            [0.78563, 0.93579, 0.20336],
            [0.79524, 0.93025, 0.20386],
            [0.80473, 0.92452, 0.20459],
            [0.81410, 0.91861, 0.20552],
            [0.82333, 0.91253, 0.20663],
            [0.83241, 0.90627, 0.20788],
            [0.84133, 0.89986, 0.20926],
            [0.85010, 0.89328, 0.21074],
            [0.85868, 0.88655, 0.21230],
            [0.86709, 0.87968, 0.21391],
            [0.87530, 0.87267, 0.21555],
            [0.88331, 0.86553, 0.21719],
            [0.89112, 0.85826, 0.21880],
            [0.89870, 0.85087, 0.22038],
            [0.90605, 0.84337, 0.22188],
            [0.91317, 0.83576, 0.22328],
            [0.92004, 0.82806, 0.22456],
            [0.92666, 0.82025, 0.22570],
            [0.93301, 0.81236, 0.22667],
            [0.93909, 0.80439, 0.22744],
            [0.94489, 0.79634, 0.22800],
            [0.95039, 0.78823, 0.22831],
            [0.95560, 0.78005, 0.22836],
            [0.96049, 0.77181, 0.22811],
            [0.96507, 0.76352, 0.22754],
            [0.96931, 0.75519, 0.22663],
            [0.97323, 0.74682, 0.22536],
            [0.97679, 0.73842, 0.22369],
            [0.98000, 0.73000, 0.22161],
            [0.98289, 0.72140, 0.21918],
            [0.98549, 0.71250, 0.21650],
            [0.98781, 0.70330, 0.21358],
            [0.98986, 0.69382, 0.21043],
            [0.99163, 0.68408, 0.20706],
            [0.99314, 0.67408, 0.20348],
            [0.99438, 0.66386, 0.19971],
            [0.99535, 0.65341, 0.19577],
            [0.99607, 0.64277, 0.19165],
            [0.99654, 0.63193, 0.18738],
            [0.99675, 0.62093, 0.18297],
            [0.99672, 0.60977, 0.17842],
            [0.99644, 0.59846, 0.17376],
            [0.99593, 0.58703, 0.16899],
            [0.99517, 0.57549, 0.16412],
            [0.99419, 0.56386, 0.15918],
            [0.99297, 0.55214, 0.15417],
            [0.99153, 0.54036, 0.14910],
            [0.98987, 0.52854, 0.14398],
            [0.98799, 0.51667, 0.13883],
            [0.98590, 0.50479, 0.13367],
            [0.98360, 0.49291, 0.12849],
            [0.98108, 0.48104, 0.12332],
            [0.97837, 0.46920, 0.11817],
            [0.97545, 0.45740, 0.11305],
            [0.97234, 0.44565, 0.10797],
            [0.96904, 0.43399, 0.10294],
            [0.96555, 0.42241, 0.09798],
            [0.96187, 0.41093, 0.09310],
            [0.95801, 0.39958, 0.08831],
            [0.95398, 0.38836, 0.08362],
            [0.94977, 0.37729, 0.07905],
            [0.94538, 0.36638, 0.07461],
            [0.94084, 0.35566, 0.07031],
            [0.93612, 0.34513, 0.06616],
            [0.93125, 0.33482, 0.06218],
            [0.92623, 0.32473, 0.05837],
            [0.92105, 0.31489, 0.05475],
            [0.91572, 0.30530, 0.05134],
            [0.91024, 0.29599, 0.04814],
            [0.90463, 0.28696, 0.04516],
            [0.89888, 0.27824, 0.04243],
            [0.89298, 0.26981, 0.03993],
            [0.88691, 0.26152, 0.03753],
            [0.88066, 0.25334, 0.03521],
            [0.87422, 0.24526, 0.03297],
            [0.86760, 0.23730, 0.03082],
            [0.86079, 0.22945, 0.02875],
            [0.85380, 0.22170, 0.02677],
            [0.84662, 0.21407, 0.02487],
            [0.83926, 0.20654, 0.02305],
            [0.83172, 0.19912, 0.02131],
            [0.82399, 0.19182, 0.01966],
            [0.81608, 0.18462, 0.01809],
            [0.80799, 0.17753, 0.01660],
            [0.79971, 0.17055, 0.01520],
            [0.79125, 0.16368, 0.01387],
            [0.78260, 0.15693, 0.01264],
            [0.77377, 0.15028, 0.01148],
            [0.76476, 0.14374, 0.01041],
            [0.75556, 0.13731, 0.00942],
            [0.74617, 0.13098, 0.00851],
            [0.73661, 0.12477, 0.00769],
            [0.72686, 0.11867, 0.00695],
            [0.71692, 0.11268, 0.00629],
            [0.70680, 0.10680, 0.00571],
            [0.69650, 0.10102, 0.00522],
            [0.68602, 0.09536, 0.00481],
            [0.67535, 0.08980, 0.00449],
            [0.66449, 0.08436, 0.00424],
            [0.65345, 0.07902, 0.00408],
            [0.64223, 0.07380, 0.00401],
            [0.63082, 0.06868, 0.00401],
            [0.61923, 0.06367, 0.00410],
            [0.60746, 0.05878, 0.00427],
            [0.59550, 0.05399, 0.00453],
            [0.58336, 0.04931, 0.00486],
            [0.57103, 0.04474, 0.00529],
            [0.55852, 0.04028, 0.00579],
            [0.54583, 0.03593, 0.00638],
            [0.53295, 0.03169, 0.00705],
            [0.51989, 0.02756, 0.00780],
            [0.50664, 0.02354, 0.00863],
            [0.49321, 0.01963, 0.00955],
            [0.47960, 0.01583, 0.01055],
        ]
    )
    cmap = create_cmap(color_list)
    return cmap
